# Kubernetes Core
# kube_version: 1.33.3
kube_network_plugin: calico
etcd_deployment_type: kubeadm
dns_mode: coredns
cluster_name: hcloud1.k8s.gamma.red

# Load Balancer
loadbalancer_apiserver_localhost: true
# loadbalancer_apiserver_type: haproxy

# kube_apiserver_bind_address: "10.0.1.5"
# loadbalancer_apiserver:
#   address: 10.0.1.5  # Ihre VIP
#   port: 6443
# supplementary_addresses_in_ssl_keys:
#   - 10.0.1.5  # VIP f端r externes kubectl

## testen=
# loadbalancer_apiserver_localhost: true
# loadbalancer_apiserver_type: haproxy
# loadbalancer_apiserver:
#   address: 10.0.1.4  # VIP
#   port: 6443
# kube_apiserver_bind_address: "0.0.0.0"


# DNS Optimierung
enable_nodelocaldns: true

# Netzwerk
kube_service_addresses: 10.233.0.0/18
kube_pods_subnet: 10.233.64.0/18
kube_proxy_mode: ipvs
kube_proxy_strict_arp: true

# Container Runtime
container_manager: containerd

# Security
podsecuritypolicy_enabled: false
kubelet_authentication_token_webhook: true
kubelet_authorization_mode_webhook: true

# Backup
etcd_backup_enabled: true
etcd_backup_schedule: "0 2 * * *"

# Kubernetes Dashboard (optional)
dashboard_enabled: false  # Security-Risk, besser externe Tools

# Metrics Server (empfohlen)
metrics_server_enabled: true

# Lokaler Registry Mirror (optional f端r bessere Performance)
registry_enabled: false

# MetalLB Installation f端r LoadBalancer-Services
metallb_enabled: true
metallb_speaker_enabled: true
metallb_namespace: metallb-system
metallb_config:
  address_pools:
    primary:
      ip_range:
        - 10.0.2.100-10.0.2.200  # Separater Range f端r LoadBalancer
      protocol: layer2