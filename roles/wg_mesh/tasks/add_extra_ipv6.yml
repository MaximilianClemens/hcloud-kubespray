- name: Load existing Netplan config
  slurp:
    src: "{{ netplan_config_path }}"
  register: netplan_raw

- name: Parse YAML content
  set_fact:
    netplan_config: "{{ netplan_raw.content | b64decode | from_yaml }}"

- name: Check if IPv6 address already exists
  set_fact:
    ipv6_already_present: "{{ ipv6_wg_mesh_net in netplan_config.network.ethernets[ipv6_wg_dev].addresses }}"

- name: Ensure new IPv6 address is present
  set_fact:
    netplan_config: >-
      {{
        netplan_config | combine({
          'network': {
            'ethernets': {
              ipv6_wg_dev: {
                'addresses': (
                  netplan_config.network.ethernets[ipv6_wg_dev].addresses | union([ipv6_wg_mesh_net])
                )
              }
            }
          }
        }, recursive=True)
      }}
  when: not ipv6_already_present

- name: Write updated Netplan config
  copy:
    dest: "{{ netplan_config_path }}"
    content: "{{ netplan_config | to_nice_yaml(indent=2) }}"
  register: netplan_result
  when: not ipv6_already_present

- name: Apply Netplan
  command: netplan apply
  when: netplan_result.changed