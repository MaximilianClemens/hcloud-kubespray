---
- name: hcloud firewall
  hosts: localhost
  tasks:
    - name: "Create Firewall: web-server"
      hetzner.hcloud.firewall:
        name: web-server
        rules:
          # ICMP (Ping)
          - direction: in
            protocol: icmp
            source_ips:
              - 0.0.0.0/0
              - ::/0
            description: allow icmp
          # SSH
          - direction: in
            protocol: tcp
            source_ips:
              - 0.0.0.0/0
              - ::/0
            port: 22
            description: allow ssh
          # HTTP
          - direction: in
            protocol: tcp
            source_ips:
              - 0.0.0.0/0
              - ::/0
            port: 80
            description: allow http
          # HTTPS
          - direction: in
            protocol: tcp
            source_ips:
              - 0.0.0.0/0
              - ::/0
            port: 443
            description: allow https
          # WireGuard
          - direction: in
            protocol: udp
            source_ips:
              - 0.0.0.0/0
              - ::/0
            port: 51820
            description: allow wireguard
        state: present
        api_token: '{{ hcloud_token }}'

- name: hcloud servers
  hosts: hcloud
  tasks:
    - name: Create a server
      delegate_to: localhost
      hetzner.hcloud.server:
        name: '{{ hcloud_hostname }}'
        server_type: '{{ hcloud_type }}'
        image: '{{ hcloud_image }}'
        state: '{{ hcloud_state | default("present") }}'
        location: '{{ hcloud_location }}'
        ssh_keys: '{{ hcloud_keys }}'
        firewalls:
          - web-server
        api_token: '{{ hcloud_token }}'
        user_data: |
          #cloud-config
          users:
            - name: automation
              ssh-authorized-keys:
          {% for key in public_keys %}
                - {{ key }}
          {% endfor %}
              sudo: ['ALL=(ALL) NOPASSWD:ALL']
              groups: sudo
              shell: /bin/bash
      register: server_result

    - name: Reload Inventory
      ansible.builtin.meta: refresh_inventory

    - name: Create A-Record at INWX DNS
      delegate_to: localhost
      inwx.collection.dns:
        domain: 'gamma.red'
        type: A
        solo: true
        record: '{{ hcloud_hostname | lower() | replace(".gamma.red", "") }}'
        value: '{{ ipv4 }}'
        username: '{{ inwx_username }}'
        password: '{{ inwx_password }}'

    - name: Create AAAA-Record at INWX DNS
      delegate_to: localhost
      inwx.collection.dns:
        domain: 'gamma.red'
        type: AAAA
        solo: true
        record: '{{ hcloud_hostname | lower() | replace(".gamma.red", "") }}'
        value: '{{ ipv6 }}'
        username: '{{ inwx_username }}'
        password: '{{ inwx_password }}'

    - name: Create PTR-Record for ipv4 at hcloud
      delegate_to: localhost
      hetzner.hcloud.rdns:
        server: '{{ hcloud_hostname }}'
        ip_address: '{{ ipv4 }}'
        dns_ptr: '{{ hcloud_hostname }}'
        state: present
        api_token: '{{ hcloud_token }}'

    - name: Create PTR-Record for ipv6 at hcloud
      delegate_to: localhost
      hetzner.hcloud.rdns:
        server: '{{ hcloud_hostname }}'
        ip_address: '{{ ipv6 }}'
        dns_ptr: '{{ hcloud_hostname }}'
        state: present
        api_token: '{{ hcloud_token }}'

    - name: Wait for Server
      ansible.builtin.wait_for_connection:

    - name: Enable SSH forwarding for sudo
      become: true
      ansible.builtin.lineinfile:
        dest: /etc/sudoers
        insertafter: '^#?\s*Defaults\s+env_keep\b'
        line: 'Defaults    env_keep += "SSH_AUTH_SOCK"'

- name: hcloud servers
  hosts: hcloud
  become: true
  roles:
    - server_setup